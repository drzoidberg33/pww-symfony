{% extends '::base.html.twig' %}

{% block stylesheets %}
{% endblock %}

{% block body %}
<div class="container-fluid">
    <div class='row-fluid'>
        <div class='span12'></div>
    </div>
    <div class='row-fluid'>
        <div class='span12'>
            <div class='wellbg'>
                <div class='wellheader'>
                    <div class='dashboard-wellheader'>
                        <h3>Statistics</h3>
                    </div>
                </div>
                <div id='library-stats'>
                    <div id='stats-spinner' class='spinner'></div>
                </div>
            </div>
        </div>

        <div class='row-fluid'>	
            <div class='span12'>
                <div class='wellbg' id="currentActivity">
                    <div class='wellheader'>
                        <div class='dashboard-wellheader'>
                            <div id='currentActivityHeader'>
                            </div>
                        </div>
                    </div>
                    <div id='currentActivity'>
                        <h5><strong>Nothing is currently being watched.</strong></h5><br>
                    </div>	
                </div>			
            </div>
        </div>				
    </div>

    <div class='row-fluid'>
        <div class='wellbg'>
            <div class='wellheader'>
                <div class='dashboard-wellheader'>
                    <h3>Recently Added</h3>
                </div>
            </div>
            <div id='recentlyAdded'>
                <div id='recently-added-spinner' class='spinner'></div>
            </div>
        </div>		
    </div>

    <footer></footer>
</div><!--/.fluid-container-->
{% endblock %}

{% block javascripts %}
    <script src="{{ asset('bundles/pwwcontent/js/spin.min.js') }}"></script>
    <script>
        var opts = {
            lines: 8, // The number of lines to draw
            length: 8, // The length of each line
            width: 4, // The line thickness
            radius: 5, // The radius of the inner circle
            corners: 1, // Corner roundness (0..1)
            rotate: 0, // The rotation offset
            direction: 1, // 1: clockwise, -1: counterclockwise
            color: '#fff', // #rgb or #rrggbb or array of colors
            speed: 1, // Rounds per second
            trail: 60, // Afterglow percentage
            shadow: false, // Whether to render a shadow
            hwaccel: false, // Whether to use hardware acceleration
            className: 'spinner', // The CSS class to assign to the spinner
            zIndex: 2e9, // The z-index (defaults to 2000000000)
            top: '0', // Top position relative to parent
            left: '50%' // Left position relative to parent
        };
        var target_a = document.getElementById('stats-spinner');
        var spinner_a = new Spinner(opts).spin(target_a);

        var target_b = document.getElementById('recently-added-spinner');
        var spinner_b = new Spinner(opts).spin(target_b);
    </script>
    <script>
        $(document).ready(function() {
            var resizeId;
            
            function recentlyAdded() {
                var widthVal= $('body').find(".container-fluid").width();
                $.ajax({
                    url: 'refresh/recent',
                    type: "GET",
                    async: true,
                    data: { width : widthVal },
                    success: function(data) {
                        $("#recentlyAdded").html(data);
                    }
                 });
            }

            function doneResizing(){
                recentlyAdded();
            }
            
            function libraryStats() {
                $.ajax({
                    url: 'refresh/stats',
                    async: true,
                    success: function(data) {
                        $("#library-stats").html(data);
                    }
                });
            }
            
            function currentActivity() {
                $.ajax({
                    url: 'refresh/activity',
                    async: true,
                    success: function(data) {
                        $("#currentActivity").html(data);
                    }
                 });
            }
            
            // run functions on page load
            recentlyAdded();
            currentActivity();
            libraryStats();
            
            // reload posters on window resize
            $(window).resize(function() {
                clearTimeout(resizeId);
                resizeId = setTimeout(doneResizing, 500);
            });
            
            // update current activity at regular intervals
            setInterval(currentActivity, 15000);
        
        });
    </script>    
{% endblock %}